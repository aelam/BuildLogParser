name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest]
        swift-version: [ '6.1' ]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # macOS Swift setup
    - name: Setup Swift (macOS)
      if: runner.os == 'macOS'
      uses: swift-actions/setup-swift@v2
      with:
        swift-version: ${{ matrix.swift-version }}
   
    - name: Print Swift version
      run: swift --version

    - name: Resolve package dependencies
      run: swift package resolve

    - name: Build
      run: swift build --verbose

    - name: Run tests
      run: swift test --verbose

    - name: Build release
      run: swift build -c release --verbose

  # Lint and format checking
  lint:
    name: Code Quality
    runs-on: macos-latest
    env:
      SWIFT_VERSION: '6.1'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Swift
      uses: swift-actions/setup-swift@v2
      with:
        swift-version: ${{ env.SWIFT_VERSION }}
      env:
        SWIFT_ACTIONS_SKIP_GPG: true

    - name: Check Swift format
      run: |
        swift run -c release --package-path Tools swiftformat .