name: Release

on:
  push:
    tags:
      - 'v*'  # Triggered on version tags like v1.0.0

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-22.04
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

  build-release:
    name: Build Release Binaries
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        swift-version: ['6.1']
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Swift
      uses: swift-actions/setup-swift@v2
      with:
        swift-version: ${{ matrix.swift-version }}
        
    - name: Build release binary
      run: |
        swift --version
        swift build -c release --verbose
        
    - name: Create Linux archive
      if: matrix.os == 'ubuntu-latest'
      run: |
        cd .build/release
        tar -czf buildlog-parser-linux-x64.tar.gz buildlog-parser
        
    - name: Create macOS archive  
      if: matrix.os == 'macos-latest'
      run: |
        cd .build/release
        tar -czf buildlog-parser-macos-arm64.tar.gz buildlog-parser

    - name: Upload Linux artifact
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v3
      with:
        name: buildlog-parser-linux-x64
        path: .build/release/buildlog-parser-linux-x64.tar.gz

    - name: Upload macOS artifact
      if: matrix.os == 'macos-latest'
      uses: actions/upload-artifact@v3
      with:
        name: buildlog-parser-macos-arm64
        path: .build/release/buildlog-parser-macos-arm64.tar.gz
